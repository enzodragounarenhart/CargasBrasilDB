// <auto-generated />
using CargasBrasilDB.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CargasBrasilDB.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CargasBrasilDB.Domin.Entities.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CadastroAprovado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("CadastroAprovado");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("Cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("Cidade");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("Cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("Email");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("Endereco");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("Estado");

                    b.Property<string>("FotoDocumentoVeiculo")
                        .IsRequired()
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("FotoDocumentoVeiculo");

                    b.Property<string>("FotoHabilitacao")
                        .IsRequired()
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("FotoHabilitacao");

                    b.Property<string>("ModeloVeiculo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("ModeloVeiculo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("Nome");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("Numero");

                    b.Property<string>("PlacaVeiculo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("PlacaVeiculo");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("Varchar(80)")
                        .HasColumnName("Senha");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Driver", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
